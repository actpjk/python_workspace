{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"머신러닝102_7Conv2d","provenance":[],"authorship_tag":"ABX9TyMPtYojX/5IgNv/7C7osli+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"oahCMOeEP-ts"},"source":["\r\n","convolution layer\r\n","\r\n","\r\n"]},{"cell_type":"code","metadata":{"id":"FZrsedASI4OD","executionInfo":{"status":"ok","timestamp":1610801529931,"user_tz":-540,"elapsed":2316,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}}},"source":["import tensorflow as tf\r\n","import pandas as pd "],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jbEl-J3KQAOW","executionInfo":{"status":"ok","timestamp":1610801681895,"user_tz":-540,"elapsed":1052,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}},"outputId":"0c0b6eb9-a8e2-47f8-878b-305c9ed0a396"},"source":["(독립, 종속), _ = tf.keras.datasets.mnist.load_data()\r\n","print(독립.shape, 종속.shape)\r\n","\r\n","독립 = 독립.reshape(60000,28,28,1)  # convoultion layer는 이미지 하나에 shape의 모양이 2차원이 아닌 3차원이어야함.\r\n","종속 = pd.get_dummies(종속)\r\n","print(독립.shape, 종속.shape)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["(60000, 28, 28) (60000,)\n","(60000, 28, 28, 1) (60000, 10)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3E-_6d8eQAM0","executionInfo":{"status":"ok","timestamp":1610801944173,"user_tz":-540,"elapsed":1043,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}}},"source":["# 모델 만들기\r\n","\r\n","x = tf.keras.layers.Input(shape=[28, 28, 1])\r\n","h = tf.keras.layers.Conv2D(3, kernel_size=5, activation='swish')(x)\r\n","h = tf.keras.layers.Conv2D(6, kernel_size=5, activation='swish')(h)\r\n","h = tf.keras.layers.Flatten()(h)\r\n","h = tf.keras.layers.Dense(84, activation='swish')(h)\r\n","y = tf.keras.layers.Dense(10, activation='softmax')(h)\r\n","\r\n","model = tf.keras.models.Model(x,y)\r\n","model.compile(loss='categorical_crossentropy', metrics='accuracy')"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fq2DwwTuRfoL","executionInfo":{"status":"ok","timestamp":1610802001883,"user_tz":-540,"elapsed":55669,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}},"outputId":"c251ff41-248e-4727-bccd-f8e801a39147"},"source":["model.fit(독립, 종속, epochs=10)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","1875/1875 [==============================] - 11s 3ms/step - loss: 0.6523 - accuracy: 0.8674\n","Epoch 2/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0674 - accuracy: 0.9806\n","Epoch 3/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0392 - accuracy: 0.9892\n","Epoch 4/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0223 - accuracy: 0.9929\n","Epoch 5/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0169 - accuracy: 0.9947\n","Epoch 6/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0132 - accuracy: 0.9959\n","Epoch 7/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0128 - accuracy: 0.9963\n","Epoch 8/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0090 - accuracy: 0.9975\n","Epoch 9/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0101 - accuracy: 0.9969\n","Epoch 10/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 0.0091 - accuracy: 0.9971\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f852007d5f8>"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"2eysKbtIQAK8","executionInfo":{"status":"ok","timestamp":1610802033424,"user_tz":-540,"elapsed":1103,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}},"outputId":"afe59c9a-ee31-49c3-a53c-4f7bb5aa89de"},"source":["pred = model.predict(독립[0:5])\r\n","pd.DataFrame(pred).round(2)\r\n"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     0    1    2    3    4    5    6    7    8    9\n","0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  0.0\n","1  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n","2  0.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  0.0  0.0\n","3  0.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n","4  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":195},"id":"5Nm2I9bFQAIA","executionInfo":{"status":"ok","timestamp":1610802033970,"user_tz":-540,"elapsed":1140,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}},"outputId":"bcd8894e-2462-406c-a7eb-55aa315a79f8"},"source":["종속[0:5]"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   0  1  2  3  4  5  6  7  8  9\n","0  0  0  0  0  0  1  0  0  0  0\n","1  1  0  0  0  0  0  0  0  0  0\n","2  0  0  0  0  1  0  0  0  0  0\n","3  0  1  0  0  0  0  0  0  0  0\n","4  0  0  0  0  0  0  0  0  0  1"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R5GU6CLyQAGG","executionInfo":{"status":"ok","timestamp":1610802045242,"user_tz":-540,"elapsed":1096,"user":{"displayName":"안녕구름아","photoUrl":"","userId":"05761503287783464441"}},"outputId":"27300fe9-d18f-47df-edd5-869f7fe0c6a3"},"source":["model.summary()"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Model: \"model_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_3 (InputLayer)         [(None, 28, 28, 1)]       0         \n","_________________________________________________________________\n","conv2d_4 (Conv2D)            (None, 24, 24, 3)         78        \n","_________________________________________________________________\n","conv2d_5 (Conv2D)            (None, 20, 20, 6)         456       \n","_________________________________________________________________\n","flatten_2 (Flatten)          (None, 2400)              0         \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 84)                201684    \n","_________________________________________________________________\n","dense_5 (Dense)              (None, 10)                850       \n","=================================================================\n","Total params: 203,068\n","Trainable params: 203,068\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"iKDI9dGzQADx"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"T0cOMKAMP_9f"},"source":[""],"execution_count":null,"outputs":[]}]}